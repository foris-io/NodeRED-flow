[  
   {  
      "id":"8ba7a480.745858",
      "type":"tab",
      "label":"Main"
   },
   {  
      "id":"fea989a4.e7d008",
      "type":"tab",
      "label":"Flow 1"
   },
   {  
      "id":"70acf5f9.8f530c",
      "type":"cloudant",
      "z":"8ba7a480.745858",
      "host":"sachet.cloudant.com",
      "name":"foris data"
   },
   {  
      "id":"35c139b2.bee9e6",
      "type":"ui_tab",
      "z":"8ba7a480.745858",
      "name":"Home",
      "icon":"dashboard"
   },
   {  
      "id":"9be7ea52.4d6938",
      "type":"ui_group",
      "z":"8ba7a480.745858",
      "name":"Default",
      "tab":"35c139b2.bee9e6",
      "disp":true,
      "width":"6"
   },
   {  
      "id":"810a2526.8ba718",
      "type":"twilio-api",
      "z":"",
      "sid":"ACb30ca28486aac530c0362277e584fcad",
      "from":"(334) 212-5994",
      "name":"FarmIoT"
   },
   {  
      "id":"797c1a78.142ff4",
      "type":"http request",
      "z":"8ba7a480.745858",
      "name":"",
      "method":"GET",
      "ret":"txt",
      "url":"",
      "tls":"",
      "x":538.6110610961914,
      "y":128.22224235534668,
      "wires":[  
         [  
            "c1d4dcf1.a7685"
         ]
      ]
   },
   {  
      "id":"2ba0b632.660b8a",
      "type":"debug",
      "z":"8ba7a480.745858",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"payload",
      "x":951.0554962158203,
      "y":56.88888931274414,
      "wires":[  

      ]
   },
   {  
      "id":"c1d4dcf1.a7685",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"getLinkLabData",
      "func":"parsedVal=JSON.parse(msg.payload);\nif(parsedVal.resultCount===0){\n    //msg.payload=\" We do not have any records after your previous request\";\n    msg.payload=null;\n    return msg;\n}\n\nfor (var i = 0; i < 10; i++) {\n\n  pld=parsedVal.results[i].value.pld;\n  ts=parsedVal.results[i].value.startReceiveTime;\n  //data = parseInt(pld, 16);\n  \n  var Temperature=((parseInt(pld[0]+pld[1]))*1.8)+32;\n  \n  var Moisture=parseInt(pld[2]+pld[3]+pld[4]+pld[5], 16);\n  var Salinity=parseInt(pld[6]+pld[7]+pld[8]+pld[9], 16);\n  var Ph=parseInt(pld[10]+pld[11]);\n  \n  \n  //var moisture = (parseInt(pld,16) & 0xff00) >> 8;\n  //var salinity = (parseInt(pld,16) & 0xff) >> 0;\n  //var temperature = (((parseInt(pld,16) & 0xff0000)* 9)/5) + 32 >> 16;\n  \n  //msg.payload={\"timestamp\":ts, temperature:temperature, moisture:moisture, salinity:salinity};\n  msg.payload={\"timestamp\":ts,\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph};\n  return msg;\n  //node.send(msg);\n\n  \n}\n\n\n\n\n",
      "outputs":"1",
      "noerr":0,
      "x":757.1666107177734,
      "y":127.33334350585938,
      "wires":[  
         [  
            "2ba0b632.660b8a",
            "8a898bcb.c443b8"
         ]
      ]
   },
   {  
      "id":"11704e62.27d9a2",
      "type":"switch",
      "z":"8ba7a480.745858",
      "name":"Weather | Soil Health | Irrigation",
      "property":"transcription",
      "propertyType":"msg",
      "rules":[  
         {  
            "t":"cont",
            "v":"weather",
            "vt":"str"
         },
         {  
            "t":"cont",
            "v":"soil",
            "vt":"str"
         },
         {  
            "t":"cont",
            "v":"webapp_token_one",
            "vt":"str"
         },
         {  
            "t":"cont",
            "v":"webapp_token_many",
            "vt":"str"
         },
         {  
            "t":"cont",
            "v":"auto_alert",
            "vt":"str"
         }
      ],
      "checkall":"true",
      "outputs":5,
      "x":544.6745300292969,
      "y":295.99998331069946,
      "wires":[  
         [  
            "fe2efb16.b8d6c8"
         ],
         [  
            "657d787c.4767e8"
         ],
         [  
            "20baaca.ba4b254"
         ],
         [  
            "a5e91641.c6b468"
         ],
         [  
            "5f44d8c.9b80c28"
         ]
      ]
   },
   {  
      "id":"550d6ba7.087814",
      "type":"http in",
      "z":"8ba7a480.745858",
      "name":"",
      "url":"/HelloWorld",
      "method":"get",
      "swaggerDoc":"",
      "x":96.5,
      "y":295.99998474121094,
      "wires":[  
         [  
            "47c02ba9.cf6c44"
         ]
      ]
   },
   {  
      "id":"47c02ba9.cf6c44",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"parse text",
      "func":"console.log(\"before: \" + msg.payload.q);\nmsg.transcription=decodeURIComponent(msg.payload.q);\nconsole.log(\"after: \" + msg.transcription);\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":297.49998474121094,
      "y":294.99998474121094,
      "wires":[  
         [  
            "11704e62.27d9a2"
         ]
      ]
   },
   {  
      "id":"96dba2df.b5e6e",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"set header",
      "func":"// Set the content type to audio wave\nmsg.headers={ 'Content-Type': 'plain/text'};\n//msg.payload = msg.speech;\nmsg.payload=msg.payload;\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1313.5554733276367,
      "y":128.66668891906738,
      "wires":[  
         [  
            "81aa4543.e817f8"
         ]
      ]
   },
   {  
      "id":"fe2efb16.b8d6c8",
      "type":"weather_insights",
      "z":"8ba7a480.745858",
      "name":"Weather Forecast",
      "service":"/forecast/daily/10day.json",
      "geocode":"37.20,-121.53",
      "units":"e",
      "language":"en-US",
      "x":897.1905364990234,
      "y":215.33333778381348,
      "wires":[  
         [  
            "812abf48.fe64c"
         ]
      ]
   },
   {  
      "id":"812abf48.fe64c",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"Weather Forecast",
      "func":"console.log(msg.forecasts);\nmsg.payload=\"Forecast for your location for the next two days will be \" + msg.forecasts[0].narrative;\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1119.0000457763672,
      "y":215.1111240386963,
      "wires":[  
         [  
            "96dba2df.b5e6e"
         ]
      ]
   },
   {  
      "id":"81aa4543.e817f8",
      "type":"http response",
      "z":"8ba7a480.745858",
      "name":"",
      "x":1526.7775917053223,
      "y":130.8888921737671,
      "wires":[  

      ]
   },
   {  
      "id":"8a898bcb.c443b8",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"Soil Health",
      "func":"console.log(msg.payload);\nif(msg.payload===null){\n     msg.payload=\"Sorry the data is not showing availability Please check to see if the hub is connected to the internet\";\n    return msg;\n}\n//msg.payload=\"The Soil Health consists of moisture at \"+ msg.payload.Moisture + \" centimeters of soil depth and \"+ \"salinity of \" + msg.payload.Salinity + \" microSiemens per centimeter \"  + \"Ph value is \"+msg.payload.Ph+\"  The ambient temperature is \"+ msg.payload.Temperature + \" degree Fahrenheit\";\nmsg.payload=\"The Soil Health consists of moisture at \"+ msg.payload.Moisture + \" centimeters of soil depth and salinity of \" +msg.payload.Salinity + \" micro siemens per centimeter. \" + \"The pH value is \"+msg.payload.Ph+\".The ambient temperature is \"+ msg.payload.Temperature + \" degree Fahrenheit.\";\nreturn msg;\n",
      "outputs":1,
      "noerr":0,
      "x":1007.4443359375,
      "y":126.66668510437012,
      "wires":[  
         [  
            "96dba2df.b5e6e",
            "1dd11495.2fa94b"
         ]
      ]
   },
   {  
      "id":"657d787c.4767e8",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"Generate current time & append it to the url",
      "func":"var currentDate=new Date();\nvar endTime = currentDate.getFullYear() +\"-\"+(currentDate.getMonth()+1)+\"-\"+currentDate.getDate()+\"T\"+currentDate.getHours() + \":\" +currentDate.getMinutes() + \":\" + currentDate.getSeconds()+\".000\";\n//var currentDateMinus20s=new Date(Date.now() - 1728000000);\nvar currentDateMinus20s=new Date(Date.now() - 1728000000);\nvar startTime = currentDateMinus20s.getFullYear() +\"-\"+(currentDateMinus20s.getMonth()+1)+\"-\"+currentDateMinus20s.getDate()+\"T\"+currentDateMinus20s.getHours() + \":\" +currentDateMinus20s.getMinutes() + \":\" + currentDateMinus20s.getSeconds()+\".000\"; \nvar x=\"2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.payload=endTime+\"/\"+startTime;\n//tes\n//msg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\nmsg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/\"+endTime+\"/\"+startTime;\nreturn msg;\n\n//2016-11-07T04:40:00.000/2016-11-05T00:00:00.000",
      "outputs":1,
      "noerr":0,
      "x":219.94442749023438,
      "y":130.1111125946045,
      "wires":[  
         [  
            "797c1a78.142ff4"
         ]
      ]
   },
   {  
      "id":"1dd11495.2fa94b",
      "type":"debug",
      "z":"8ba7a480.745858",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"payload",
      "x":1199.7222061157227,
      "y":61.888898849487305,
      "wires":[  

      ]
   },
   {  
      "id":"fa216374.25a3f",
      "type":"http in",
      "z":"fea989a4.e7d008",
      "name":"",
      "url":"/webapp",
      "method":"get",
      "swaggerDoc":"",
      "x":92.33332824707031,
      "y":218.3333282470703,
      "wires":[  
         [  

         ]
      ]
   },
   {  
      "id":"20baaca.ba4b254",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"prepare REST end points",
      "func":"var currentDate=new Date();\nvar endTime = currentDate.getFullYear() +\"-\"+(currentDate.getMonth()+1)+\"-\"+currentDate.getDate()+\"T\"+currentDate.getHours() + \":\" +currentDate.getMinutes() + \":\" + currentDate.getSeconds()+\".000\";\nvar currentDateMinus20s=new Date(Date.now() - 14000000000000);\nvar startTime = currentDateMinus20s.getFullYear() +\"-\"+(currentDateMinus20s.getMonth()+1)+\"-\"+currentDateMinus20s.getDate()+\"T\"+currentDateMinus20s.getHours() + \":\" +currentDateMinus20s.getMinutes() + \":\" + currentDateMinus20s.getSeconds()+\".000\"; \nvar x=\"2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.payload=endTime+\"/\"+startTime;\n//tes\nmsg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/\"+endTime+\"/\"+startTime;\nreturn msg;\n\n//2016-11-07T04:40:00.000/2016-11-05T00:00:00.000",
      "outputs":1,
      "noerr":0,
      "x":165.49998474121094,
      "y":512.3335590362549,
      "wires":[  
         [  
            "6eb06ce.4653994"
         ]
      ]
   },
   {  
      "id":"249414e5.0262bc",
      "type":"debug",
      "z":"8ba7a480.745858",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"payload",
      "x":851.944465637207,
      "y":567.888913154602,
      "wires":[  

      ]
   },
   {  
      "id":"6eb06ce.4653994",
      "type":"http request",
      "z":"8ba7a480.745858",
      "name":"Login to Linklab ",
      "method":"GET",
      "ret":"txt",
      "url":"",
      "tls":"",
      "x":424.55552673339844,
      "y":509.8889789581299,
      "wires":[  
         [  
            "67288f06.16ef9"
         ]
      ]
   },
   {  
      "id":"67288f06.16ef9",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"get data",
      "func":"parsedVal=JSON.parse(msg.payload);\n//msg.payload=null;\nif(parsedVal.resultCount===0){\n    //msg.payload=\" We do not have any records after your previous request\";\n    //msg.payload=null;\n    msg.payload={\"timestamp\":0,\"app_token\":0,\"gateway_Id\":0,\"end_point\":0,\"sensor\":{\"Temperature\": 0, \"Moisture\":0, \"Salinity\":0, \"Ph\":0},\"Message\": \"We do not have any records after your previous request\" };\n    return msg;\n}\n//var array=[];\nfor (var i = 0; i < 1; i++) {\n\n  pld=parsedVal.results[i].value.pld;\n  ts=parsedVal.results[i].value.startReceiveTime;\n  app_token=parsedVal.results[i].metadata.props.app_tok;\n  gateway_Id=parsedVal.results[i].value.gateway;\n  end_point=parsedVal.results[i].value.module;\n  //data = parseInt(pld, 16);\n  \n  var Temperature=((parseInt(pld[0]+pld[1]))*1.8)+32;\n  \n  var Moisture=parseInt(pld[2]+pld[3]+pld[4]+pld[5], 16);\n  var Salinity=parseInt(pld[6]+pld[7]+pld[8]+pld[9], 16);\n  var Ph=parseInt(pld[10]+pld[11]);\n  \n  \n  //var moisture = (parseInt(pld,16) & 0xff00) >> 8;\n  //var salinity = (parseInt(pld,16) & 0xff) >> 0;\n  //var temperature = (((parseInt(pld,16) & 0xff0000)* 9)/5) + 32 >> 16;\n  \n  //msg.payload={\"timestamp\":ts, temperature:temperature, moisture:moisture, salinity:salinity};\n  msg.payload={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  //array[i]={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  //return msg;\n  \n\n  \n}\n//msg.payload=array;\nreturn msg;\n\n\n\n\n",
      "outputs":1,
      "noerr":0,
      "x":620.611083984375,
      "y":509.2222785949707,
      "wires":[  
         [  
            "d10f3f80.26a63",
            "249414e5.0262bc"
         ]
      ]
   },
   {  
      "id":"d10f3f80.26a63",
      "type":"json",
      "z":"8ba7a480.745858",
      "name":"Json",
      "x":822.6111831665039,
      "y":509.2222719192505,
      "wires":[  
         [  
            "493a6af7.4c3814"
         ]
      ]
   },
   {  
      "id":"9594876d.2c5848",
      "type":"http response",
      "z":"8ba7a480.745858",
      "name":"",
      "x":1230.111083984375,
      "y":504.5556354522705,
      "wires":[  

      ]
   },
   {  
      "id":"493a6af7.4c3814",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"set header",
      "func":"// Set the content type to audio wave\nmsg.headers={ 'Content-Type': 'application/json','Access-Control-Allow-Origin':'*'};\n//msg.payload = msg.speech;\nmsg.payload=msg.payload;\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1021.4444046020508,
      "y":506.55570697784424,
      "wires":[  
         [  
            "9594876d.2c5848"
         ]
      ]
   },
   {  
      "id":"a5e91641.c6b468",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"prepare REST end points",
      "func":"var currentDate=new Date();\nvar endTime = currentDate.getFullYear() +\"-\"+(currentDate.getMonth()+1)+\"-\"+currentDate.getDate()+\"T\"+currentDate.getHours() + \":\" +currentDate.getMinutes() + \":\" + currentDate.getSeconds()+\".000\";\nvar currentDateMinus20s=new Date(Date.now() - 172800000000);\nvar startTime = currentDateMinus20s.getFullYear() +\"-\"+(currentDateMinus20s.getMonth()+1)+\"-\"+currentDateMinus20s.getDate()+\"T\"+currentDateMinus20s.getHours() + \":\" +currentDateMinus20s.getMinutes() + \":\" + currentDateMinus20s.getSeconds()+\".000\"; \nvar x=\"2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.payload=endTime+\"/\"+startTime;\n//tes\n//msg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/\"+endTime+\"/\"+startTime;\nmsg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\"\nreturn msg;\n\n//2016-11-07T04:40:00.000/2016-11-05T00:00:00.000",
      "outputs":1,
      "noerr":0,
      "x":167.03701782226562,
      "y":650.7407150268555,
      "wires":[  
         [  
            "8cd36078.606ca"
         ]
      ]
   },
   {  
      "id":"8cd36078.606ca",
      "type":"http request",
      "z":"8ba7a480.745858",
      "name":"Login to Linklab ",
      "method":"GET",
      "ret":"txt",
      "url":"",
      "tls":"",
      "x":422.5925598144531,
      "y":650.7407741546631,
      "wires":[  
         [  
            "97ae10a2.2d0ce"
         ]
      ]
   },
   {  
      "id":"97ae10a2.2d0ce",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"get data",
      "func":"parsedVal=JSON.parse(msg.payload);\n//msg.payload=null;\nif(parsedVal.resultCount===0){\n    //msg.payload=\" We do not have any records after your previous request\";\n    //msg.payload=null;\n    msg.payload={\"timestamp\":0,\"app_token\":0,\"gateway_Id\":0,\"end_point\":0,\"sensor\":{\"Temperature\": 0, \"Moisture\":0, \"Salinity\":0, \"Ph\":0},\"Message\": \"We do not have any records after your previous request\" };\n    return msg;\n}\nvar array=[];\nfor (var i = 0; i < 100; i++) {\n\n  pld=parsedVal.results[i].value.pld;\n  ts=parsedVal.results[i].value.startReceiveTime;\n  app_token=parsedVal.results[i].metadata.props.app_tok;\n  gateway_Id=parsedVal.results[i].value.gateway;\n  end_point=parsedVal.results[i].value.module;\n  //data = parseInt(pld, 16);\n  \n  var Temperature=((parseInt(pld[0]+pld[1]))*1.8)+32;\n  \n  var Moisture=parseInt(pld[2]+pld[3]+pld[4]+pld[5], 16);\n  var Salinity=parseInt(pld[6]+pld[7]+pld[8]+pld[9], 16);\n  var Ph=parseInt(pld[10]+pld[11]);\n  \n  \n  //var moisture = (parseInt(pld,16) & 0xff00) >> 8;\n  //var salinity = (parseInt(pld,16) & 0xff) >> 0;\n  //var temperature = (((parseInt(pld,16) & 0xff0000)* 9)/5) + 32 >> 16;\n  \n  //msg.payload={\"timestamp\":ts, temperature:temperature, moisture:moisture, salinity:salinity};\n  //msg.payload={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  array[i]={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  //return msg;\n  \n\n  \n}\nmsg.payload=array;\nreturn msg;\n\n\n\n\n",
      "outputs":1,
      "noerr":0,
      "x":609.2592468261719,
      "y":650.7407264709473,
      "wires":[  
         [  
            "29bc4c4b.264a54",
            "65e90448.3c98ec"
         ]
      ]
   },
   {  
      "id":"29bc4c4b.264a54",
      "type":"json",
      "z":"8ba7a480.745858",
      "name":"Json",
      "x":818.8888320922852,
      "y":655.1851854324341,
      "wires":[  
         [  
            "e5dff52d.5e29e8"
         ]
      ]
   },
   {  
      "id":"e5dff52d.5e29e8",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"set header",
      "func":"// Set the content type to audio wave\nmsg.headers={ 'Content-Type': 'application/json','Access-Control-Allow-Origin':'*'};\n//msg.payload = msg.speech;\nmsg.payload=msg.payload;\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1023.3332901000977,
      "y":664.0740489959717,
      "wires":[  
         [  
            "28930ce6.f8e134"
         ]
      ]
   },
   {  
      "id":"28930ce6.f8e134",
      "type":"http response",
      "z":"8ba7a480.745858",
      "name":"",
      "x":1226.2962646484375,
      "y":659.629638671875,
      "wires":[  

      ]
   },
   {  
      "id":"65e90448.3c98ec",
      "type":"debug",
      "z":"8ba7a480.745858",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"payload",
      "x":842.5925941467285,
      "y":717.4073696136475,
      "wires":[  

      ]
   },
   {  
      "id":"5b296109.35b48",
      "type":"twilio out",
      "z":"8ba7a480.745858",
      "service":"_ext_",
      "twilio":"810a2526.8ba718",
      "from":"",
      "number":"+14849837808",
      "name":"",
      "x":1250.8333053588867,
      "y":815.4444446563721,
      "wires":[  

      ]
   },
   {  
      "id":"5f44d8c.9b80c28",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"prepare REST end points",
      "func":"var currentDate=new Date();\nvar endTime = currentDate.getFullYear() +\"-\"+(currentDate.getMonth()+1)+\"-\"+currentDate.getDate()+\"T\"+currentDate.getHours() + \":\" +currentDate.getMinutes() + \":\" + currentDate.getSeconds()+\".000\";\nvar currentDateMinus20s=new Date(Date.now() - 14000000000000);\nvar startTime = currentDateMinus20s.getFullYear() +\"-\"+(currentDateMinus20s.getMonth()+1)+\"-\"+currentDateMinus20s.getDate()+\"T\"+currentDateMinus20s.getHours() + \":\" +currentDateMinus20s.getMinutes() + \":\" + currentDateMinus20s.getSeconds()+\".000\"; \nvar x=\"2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\n//msg.payload=endTime+\"/\"+startTime;\n//tes\n//msg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/2016-11-07T04:40:00.000/2016-11-05T00:00:00.000\";\nmsg.url=\"https://clientedge-conductor.link-labs.com/clientEdge/data/uplinkPayload/node/$301$0-0-0-03000243e/events/\"+endTime+\"/\"+startTime;\nreturn msg;\n\n//2016-11-07T04:40:00.000/2016-11-05T00:00:00.000",
      "outputs":1,
      "noerr":0,
      "x":159.4444351196289,
      "y":811.2222347259521,
      "wires":[  
         [  
            "f5b8d28c.25da5"
         ]
      ]
   },
   {  
      "id":"f5b8d28c.25da5",
      "type":"http request",
      "z":"8ba7a480.745858",
      "name":"Login to Linklab ",
      "method":"GET",
      "ret":"txt",
      "url":"",
      "tls":"",
      "x":416.3332977294922,
      "y":811,
      "wires":[  
         [  
            "44333336.39cedc"
         ]
      ]
   },
   {  
      "id":"44333336.39cedc",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"get data",
      "func":"parsedVal=JSON.parse(msg.payload);\n//msg.payload=null;\nif(parsedVal.resultCount===0){\n    //msg.payload=\" We do not have any records after your previous request\";\n    //msg.payload=null;\n    msg.payload={\"timestamp\":0,\"app_token\":0,\"gateway_Id\":0,\"end_point\":0,\"sensor\":{\"Temperature\": 0, \"Moisture\":0, \"Salinity\":0, \"Ph\":0},\"Message\": \"We do not have any records after your previous request\" };\n    return msg;\n}\n//var array=[];\nfor (var i = 0; i < 1; i++) {\n\n  pld=parsedVal.results[i].value.pld;\n  //ts=parsedVal.results[i].value.startReceiveTime;\n  //app_token=parsedVal.results[i].metadata.props.app_tok;\n  //gateway_Id=parsedVal.results[i].value.gateway;\n  //end_point=parsedVal.results[i].value.module;\n  //data = parseInt(pld, 16);\n  \n  //var Temperature=((parseInt(pld[0]+pld[1]))*1.8)+32;\n  \n  var Moisture=parseInt(pld[2]+pld[3]+pld[4]+pld[5], 16);\n  //var Salinity=parseInt(pld[6]+pld[7]+pld[8]+pld[9], 16);\n  //var Ph=parseInt(pld[10]+pld[11]);\n  \n  \n  //var moisture = (parseInt(pld,16) & 0xff00) >> 8;\n  //var salinity = (parseInt(pld,16) & 0xff) >> 0;\n  //var temperature = (((parseInt(pld,16) & 0xff0000)* 9)/5) + 32 >> 16;\n  \n  //msg.payload={\"timestamp\":ts, temperature:temperature, moisture:moisture, salinity:salinity};\n  //msg.payload={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  //array[i]={\"timestamp\":ts,\"app_token\":app_token,\"gateway_Id\":gateway_Id,\"end_point\":end_point,\"sensor\":{\"Temperature\": Temperature, \"Moisture\":Moisture, \"Salinity\":Salinity, \"Ph\":Ph},\"Message\": \"Data retrieved successfully\"};\n  //return msg;\n  msg.payload=Moisture;\n\n  \n}\n\nreturn msg;\n\n\n\n\n",
      "outputs":1,
      "noerr":0,
      "x":610.3332977294922,
      "y":815,
      "wires":[  
         [  
            "9b14bb22.0a7fd8",
            "6237b5b5.c826dc"
         ]
      ]
   },
   {  
      "id":"9b14bb22.0a7fd8",
      "type":"switch",
      "z":"8ba7a480.745858",
      "name":"",
      "property":"payload",
      "propertyType":"msg",
      "rules":[  
         {  
            "t":"gt",
            "v":"1000",
            "vt":"str"
         },
         {  
            "t":"btwn",
            "v":"500",
            "vt":"num",
            "v2":"800",
            "v2t":"num"
         }
      ],
      "checkall":"true",
      "outputs":2,
      "x":828.1666831970215,
      "y":817.8888740539551,
      "wires":[  
         [  
            "2f2de3cc.043c0c"
         ],
         [  
            "43b3e9e5.68aac8"
         ]
      ]
   },
   {  
      "id":"2f2de3cc.043c0c",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"",
      "func":"msg.payload=\"Soil is dry. Please start irrigation\";\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1045.370364718967,
      "y":780.370364718967,
      "wires":[  
         [  
            "5b296109.35b48"
         ]
      ]
   },
   {  
      "id":"43b3e9e5.68aac8",
      "type":"function",
      "z":"8ba7a480.745858",
      "name":"",
      "func":"msg.payload=\"Soil is moist enough for this crop. Please stop irrigating\";\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1044.814853668213,
      "y":869.259220123291,
      "wires":[  
         [  
            "5b296109.35b48"
         ]
      ]
   },
   {  
      "id":"6237b5b5.c826dc",
      "type":"debug",
      "z":"8ba7a480.745858",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"false",
      "x":813.5185128671152,
      "y":912.9629799171731,
      "wires":[  

      ]
   }
]
